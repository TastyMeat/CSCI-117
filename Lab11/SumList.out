[local ["SumListS","SumList","Out1","Out2"] [SumList = proc {$ L EXU1} [case L of nil() then [EXU1 = 0] else [case L of '|'(1:X 2:Xs) then [local ["EXU2","EXU3"] [EXU2 = X,local ["EXU5"] [EXU5 = Xs,"SumList" "EXU5" "EXU3"],"IntPlus" "EXU2" "EXU3" "EXU1"]] else [skip]]],SumListS = proc {$ L EXU1} [local ["C","Go"] [local ["NCU2"] [NCU2 = 0,{NewCell NCU2 C}],Go = proc {$ L} [case L of '|'(1:X 2:Xs) then [local ["SCU2","GarbU2"] [local ["EXU3","EXU4"] [{Exchange C EXU3 EXU3},EXU4 = X,"IntPlus" "EXU3" "EXU4" "SCU2"],{Exchange C GarbU2 SCU2}],local ["EXU2"] [EXU2 = Xs,"Go" "EXU2"]] else [skip]],local ["EXU2"] [EXU2 = L,"Go" "EXU2"],{Exchange C EXU1 EXU1}]],local ["EXU1"] [local ["EXU2","EXU3","EXU4","EXU5"] [EXU2 = 1,EXU3 = 2,EXU4 = 3,EXU5 = 4,local ["EXU6","EXU7"] [EXU6 = EXU2,local ["EXU8","EXU9"] [EXU8 = EXU3,local ["EXU10","EXU11"] [EXU10 = EXU4,local ["EXU12","EXU13"] [EXU12 = EXU5,EXU13 = nil(),EXU11 = '|'(1:EXU12 2:EXU13)],EXU9 = '|'(1:EXU10 2:EXU11)],EXU7 = '|'(1:EXU8 2:EXU9)],EXU1 = '|'(1:EXU6 2:EXU7)]],"SumListS" "EXU1" "Out2"],skip/BOut2,skip/f]]