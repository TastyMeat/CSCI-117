[local ["NewStack","S","Pu","Po","IsE","B1","B2","V1","V2","V3","Out"] [NewStack = proc {$ EXU1} [local ["C","Push","Pop","IsEmpty"] [Push = proc {$ X} [local ["SCU2","GarbU2"] [local ["EXU3","EXU4"] [EXU3 = X,{Exchange C EXU4 EXU4},SCU2 = '|'(1:EXU3 2:EXU4)],{Exchange C GarbU2 SCU2}]],Pop = proc {$ EXU2} [local ["B"] [local ["B"] [{Exchange C B B},case B of '|'(1:X 2:S1) then [local ["SCU3","GarbU3"] [SCU3 = S1,{Exchange C GarbU3 SCU3}],EXU2 = X] else [skip]]]],IsEmpty = proc {$ EXU2} [local ["EXU3","EXU4"] [{Exchange C EXU3 EXU3},EXU4 = nil(),"Eq" "EXU3" "EXU4" "EXU2"]],local ["NCU2"] [NCU2 = nil(),{NewCell NCU2 C}],local ["EXU2","EXU3","EXU4"] [EXU2 = Push,EXU3 = Pop,EXU4 = IsEmpty,EXU1 = ops(push:EXU2 pop:EXU3 isEmpty:EXU4)]]],"NewStack" "S",local ["EXU1","EXU2","EXU3"] [EXU1 = Pu,EXU2 = Po,EXU3 = IsE,S = ops(push:EXU1 pop:EXU2 isEmpty:EXU3)],"IsE" "B1",local ["EXU1"] [EXU1 = 1,"Pu" "EXU1"],local ["EXU1"] [EXU1 = 2,"Pu" "EXU1"],local ["EXU1"] [EXU1 = 3,"Pu" "EXU1"],"IsE" "B2","Po" "V1","Po" "V2","Po" "V3",local ["EXU1","EXU2","EXU3","EXU4","EXU5"] [EXU1 = V1,EXU2 = V2,EXU3 = V3,EXU4 = B1,EXU5 = B2,local ["EXU6","EXU7"] [EXU6 = EXU1,local ["EXU8","EXU9"] [EXU8 = EXU2,local ["EXU10","EXU11"] [EXU10 = EXU3,local ["EXU12","EXU13"] [EXU12 = EXU4,local ["EXU14","EXU15"] [EXU14 = EXU5,EXU15 = nil(),EXU13 = '|'(1:EXU14 2:EXU15)],EXU11 = '|'(1:EXU12 2:EXU13)],EXU9 = '|'(1:EXU10 2:EXU11)],EXU7 = '|'(1:EXU8 2:EXU9)],Out = '|'(1:EXU6 2:EXU7)]],skip/BOut]]